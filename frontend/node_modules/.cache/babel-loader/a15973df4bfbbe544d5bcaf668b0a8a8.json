{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\react-book-store\\\\frontend\\\\src\\\\screens\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { registeract } from '../actions/userActions';\nimport { useForm } from \"react-hook-form\";\n\nfunction RegisterScreen(props) {\n  _s();\n\n  var _errors$name, _errors$email, _errors$password, _errors$rePassword;\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues\n  } = useForm();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    success,\n    error\n  } = userRegister;\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const dispatch = useDispatch();\n  const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push(props.location.search);\n    }\n\n    if (success) {\n      document.getElementById(\"frmRegister\").reset();\n    }\n\n    return () => {//\n    };\n  }, [userInfo, props, redirect, success]);\n\n  const submitHandler = e => {\n    dispatch(registeract(name, email, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"breadcrumb-item\",\n          href: process.env.PUBLIC_URL + \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"breadcrumb-item active\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"static about-sec\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"offset-4 col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form1\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                id: \"frmRegister\",\n                onSubmit: handleSubmit(submitHandler),\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"form-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: \"Create Account\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 23\n                    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"alert alert-danger\",\n                      children: error.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 21\n                    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"alert alert-info\",\n                      children: \"A verification link has been sent to your email account\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"name\",\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 11\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"name\",\n                      name: \"name\",\n                      id: \"name\",\n                      onChange: e => setName(e.target.value),\n                      ref: register({\n                        required: \"This field is required\"\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 11\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 11\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email\",\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 11\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"email\",\n                      name: \"email\",\n                      id: \"email\",\n                      onChange: e => setEmail(e.target.value),\n                      ref: register({\n                        required: \"This field is required\",\n                        pattern: {\n                          value: /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\n                          message: \"Please enter valid email address\"\n                        }\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 11\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 11\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"password\",\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 11\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"password\",\n                      id: \"password\",\n                      name: \"password\",\n                      onChange: e => setPassword(e.target.value),\n                      ref: register({\n                        required: \"This field is required\",\n                        minLength: {\n                          value: 6,\n                          message: \"Minimum length of password is 6\"\n                        }\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 11\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 9\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"rePassword\",\n                      children: \"Re-Enter Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 11\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"password\",\n                      id: \"rePassword\",\n                      name: \"rePassword\",\n                      ref: register({\n                        required: \"This field is required\",\n                        minLength: {\n                          value: 6,\n                          message: \"Minimum length of password is 6\"\n                        },\n                        validate: {\n                          passwordEqual: value => value === getValues().password || 'Password do not match'\n                        }\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 11\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: (_errors$rePassword = errors.rePassword) === null || _errors$rePassword === void 0 ? void 0 : _errors$rePassword.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 9\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-primary btn-lg\",\n                      children: \"Register\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Already have an account?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 11\n                    }, this), /*#__PURE__*/_jsxDEV(Link, {\n                      to: redirect === \"/\" ? \"signin\" : \"signin?redirect=\" + redirect,\n                      className: \"btn btn-secondary text-center\",\n                      children: \"Sign In\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 11\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 9\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RegisterScreen, \"bSGCkU+v/O1pB5k56Ud2RF9+XTo=\", false, function () {\n  return [useForm, useSelector, useSelector, useDispatch];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["F:/react-book-store/frontend/src/screens/RegisterScreen.js"],"names":["React","useEffect","useState","Link","useSelector","useDispatch","registeract","useForm","RegisterScreen","props","register","handleSubmit","errors","getValues","name","setName","email","setEmail","password","setPassword","userRegister","state","loading","success","error","userSignin","userInfo","dispatch","redirect","location","search","split","history","push","document","getElementById","reset","submitHandler","e","process","env","PUBLIC_URL","message","target","value","required","pattern","minLength","validate","passwordEqual","rePassword"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { registeract } from '../actions/userActions';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction RegisterScreen(props) {\r\n    const { register, handleSubmit, errors, getValues  } = useForm();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const userRegister = useSelector(state => state.userRegister);\r\n  const { loading, success, error } = userRegister;\r\n  \r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n       props.history.push(props.location.search);\r\n    }\r\n    if (success) {\r\n       document.getElementById(\"frmRegister\").reset(); \r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [userInfo, props, redirect, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    dispatch(registeract(name, email, password));\r\n  }\r\n  return (\r\n        <>\r\n            <div className=\"breadcrumb\">\r\n                <div className=\"container\">\r\n                    <a className=\"breadcrumb-item\" href={process.env.PUBLIC_URL+\"/\"}>Home</a>\r\n                    <span className=\"breadcrumb-item active\">Register</span>\r\n                </div>\r\n            </div>\r\n            <section className=\"static about-sec\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"offset-4 col-4\">\r\n                            <div className=\"form1\">\r\n    <form id=\"frmRegister\" onSubmit={handleSubmit(submitHandler)}>\r\n      <ul className=\"form-container\">\r\n        <li>\r\n          <h2>Create Account</h2>\r\n        </li>\r\n        <li>\r\n          {loading && <div>Loading...</div>}\r\n          {error && <div className=\"alert alert-danger\">{error.message}</div>}\r\n          {success && <div className=\"alert alert-info\">A verification link has been sent to your email account</div>}\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)} ref={register({\r\n                required: \"This field is required\"})}>\r\n          </input>\r\n          {/* errors will return when field validation fails  */}\r\n          <span className=\"text-danger\">{errors.name?.message}</span>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)} ref={register({\r\n                required: \"This field is required\",\r\n                pattern: {\r\n                  value: /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\r\n                  message: \"Please enter valid email address\"\r\n                }\r\n              })}>\r\n          </input>\r\n          {/* errors will return when field validation fails  */}\r\n          <span className=\"text-danger\">{errors.email?.message}</span>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)} ref={register({\r\n          required: \"This field is required\",\r\n          minLength: {\r\n            value: 6,\r\n            message: \"Minimum length of password is 6\"\r\n          }\r\n        })}>\r\n          </input>\r\n        <span className=\"text-danger\">{errors.password?.message}</span>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"rePassword\">Re-Enter Password</label>\r\n          <input type=\"password\" id=\"rePassword\" name=\"rePassword\"  ref={register({\r\n            required: \"This field is required\",\r\n            minLength: {\r\n              value: 6,\r\n              message: \"Minimum length of password is 6\"\r\n            },\r\n            validate: {\r\n                passwordEqual: value => (value === getValues().password) || 'Password do not match'\r\n            },\r\n          })}></input>\r\n        <span className=\"text-danger\">{errors.rePassword?.message}</span>\r\n        </li>\r\n        <li>\r\n          <button type=\"submit\" className=\"btn btn-primary btn-lg\">Register</button>\r\n        </li>\r\n        <li>\r\n          <span>Already have an account?</span>\r\n          <Link to={redirect === \"/\" ? \"signin\" : \"signin?redirect=\" + redirect} className=\"btn btn-secondary text-center\" >Sign In</Link>\r\n\r\n        </li>\r\n\r\n      </ul>\r\n    </form>\r\n\r\n  </div>\r\n  </div>\r\n  </div>\r\n  </div>\r\n  </section>\r\n  </>\r\n);\r\n          }\r\nexport default RegisterScreen;"]},"metadata":{},"sourceType":"module"}