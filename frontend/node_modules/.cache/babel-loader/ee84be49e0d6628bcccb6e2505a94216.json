{"ast":null,"code":"import axios from \"axios\";\nimport Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGOUT, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_SAVE_SUCCESS, USER_SAVE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_RESET_REQUEST, USER_RESET_SUCCESS, USER_RESET_FAIL } from \"../constants/userConstants\";\n\nconst update = ({\n  userId,\n  name,\n  email,\n  password\n}) => async (dispatch, getState) => {\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n  dispatch({\n    type: USER_UPDATE_REQUEST,\n    payload: {\n      userId,\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.put(\"/api/users/\" + userId, {\n      name,\n      email,\n      password\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response.data\n    });\n  }\n};\n\nconst resetUser = email => async dispatch => {\n  dispatch({\n    type: USER_RESET_REQUEST,\n    payload: {\n      email\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/resetuser\", {\n      email\n    });\n    dispatch({\n      type: USER_RESET_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_RESET_FAIL,\n      payload: error.response.data\n    });\n  }\n};\n\nconst registeract = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    }); //Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response.data\n    });\n  }\n};\n\nconst logout = () => dispatch => {\n  Cookie.remove(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\n\nconst listUsers = () => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/users');\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveUser = user => async (dispatch, getState) => {\n  try {\n    console.log(\"User Saving...\"); // dispatch({ type: SHOP_SAVE_REQUEST, payload: product });\n\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!user._id) {\n      const {\n        data\n      } = await Axios.post('/api/users', user, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: USER_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/users/' + user._id, user, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: USER_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: USER_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteUser = userId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: USER_DELETE_REQUEST,\n      payload: userId\n    });\n    const {\n      data\n    } = await axios.delete('/api/users/' + userId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { resetUser, signin, registeract, logout, update, listUsers, deleteUser, saveUser };","map":{"version":3,"sources":["F:/react-book-store/frontend/src/actions/userActions.js"],"names":["axios","Axios","Cookie","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGOUT","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_SAVE_SUCCESS","USER_SAVE_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_RESET_REQUEST","USER_RESET_SUCCESS","USER_RESET_FAIL","update","userId","name","email","password","dispatch","getState","userSignin","userInfo","type","payload","data","put","headers","Authorization","token","set","JSON","stringify","error","message","signin","post","response","resetUser","registeract","logout","remove","listUsers","get","saveUser","user","console","log","_id","deleteUser","delete","success"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport Axios from \"axios\";\r\nimport Cookie from 'js-cookie';\r\nimport {\r\n  USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS,\r\n  USER_SIGNIN_FAIL, USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGOUT, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_SAVE_SUCCESS,\r\n  USER_SAVE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_RESET_REQUEST, USER_RESET_SUCCESS,\r\n  USER_RESET_FAIL\r\n} from \"../constants/userConstants\";\r\n\r\nconst update = ({ userId, name, email, password }) => async (dispatch, getState) => {\r\n  const { userSignin: { userInfo } } = getState();\r\n  dispatch({ type: USER_UPDATE_REQUEST, payload: { userId, name, email, password } });\r\n  try {\r\n    const { data } = await Axios.put(\"/api/users/\" + userId,\r\n      { name, email, password }, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + userInfo.token\r\n      }\r\n    });\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n    Cookie.set('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({ type: USER_UPDATE_FAIL, payload: error.message });\r\n  }\r\n}\r\n\r\nconst signin = (email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n  try {\r\n    const { data } = await Axios.post(\"/api/users/signin\", { email, password });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    Cookie.set('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNIN_FAIL, payload: error.response.data });\r\n  }\r\n}\r\nconst resetUser = (email) => async (dispatch) => {\r\n  dispatch({ type: USER_RESET_REQUEST, payload: { email } });\r\n  try {\r\n    const { data } = await Axios.post(\"/api/users/resetuser\", { email });\r\n    dispatch({ type: USER_RESET_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: USER_RESET_FAIL, payload: error.response.data });\r\n  }\r\n}\r\nconst registeract = (name, email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { name, email, password } });\r\n  try {\r\n    const { data } = await Axios.post(\"/api/users/register\", { name, email, password });\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    //Cookie.set('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({ type: USER_REGISTER_FAIL, payload: error.response.data });\r\n  }\r\n}\r\n\r\nconst logout = () => (dispatch) => {\r\n  Cookie.remove(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT })\r\n}\r\n\r\nconst listUsers = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      '/api/users'\r\n    );\r\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: USER_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst saveUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n      console.log(\"User Saving...\")\r\n   // dispatch({ type: SHOP_SAVE_REQUEST, payload: product });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    if (!user._id) {\r\n      const { data } = await Axios.post('/api/users', user, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + userInfo.token,\r\n        },\r\n      });\r\n      dispatch({ type: USER_SAVE_SUCCESS, payload: data });\r\n    } else {\r\n      const { data } = await Axios.put(\r\n        '/api/users/' + user._id,\r\n        user,\r\n        {\r\n          headers: {\r\n            Authorization: 'Bearer ' + userInfo.token,\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: USER_SAVE_SUCCESS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: USER_SAVE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst deleteUser = (userId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    dispatch({ type: USER_DELETE_REQUEST, payload: userId });\r\n    const { data } = await axios.delete('/api/users/' + userId, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + userInfo.token,\r\n      },\r\n    });\r\n    dispatch({ type: USER_DELETE_SUCCESS, payload: data, success: true });\r\n  } catch (error) {\r\n    dispatch({ type: USER_DELETE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport { resetUser, signin, registeract, logout, update, listUsers, deleteUser, saveUser };"]},"metadata":{},"sourceType":"module"}