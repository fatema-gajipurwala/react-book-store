{"ast":null,"code":"import { CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, CATEGORY_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_REVIEW_SAVE_REQUEST, PRODUCT_REVIEW_SAVE_FAIL, PRODUCT_REVIEW_SAVE_SUCCESS } from '../constants/productConstants';\nimport axios from 'axios';\nimport Axios from 'axios';\n\nconst listProducts = (category = '', searchKeyword = '', sortOrder = '') => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products?category=' + category + '&searchKeyword=' + searchKeyword + '&sortOrder=' + sortOrder);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listCategories = (category = '', searchKeyword = '', sortOrder = '') => async dispatch => {\n  try {\n    dispatch({\n      type: CATEGORY_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products/categories?category=' + category + '&searchKeyword=' + searchKeyword + '&sortOrder=' + sortOrder);\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst shopProducts = (shopId = '', category = '', searchKeyword = '', sortOrder = '') => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products?shopId=' + shopId + '&category=' + category + '&searchKeyword=' + searchKeyword + '&sortOrder=' + sortOrder);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    console.log(\"Product Saving...\");\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get('/api/products/' + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProdcut = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete('/api/products/' + productId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProductReview = (productId, reviewId) => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete('/api/products/' + productId + '/reviews/' + reviewId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo: {\n          token\n        }\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_REQUEST,\n      payload: review\n    });\n    const {\n      data\n    } = await axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    // report error\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, listCategories, shopProducts, detailsProduct, saveProduct, deleteProdcut, saveProductReview, deleteProductReview };","map":{"version":3,"sources":["F:/react-book-store/frontend/src/actions/productActions.js"],"names":["CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_REVIEW_SAVE_REQUEST","PRODUCT_REVIEW_SAVE_FAIL","PRODUCT_REVIEW_SAVE_SUCCESS","axios","Axios","listProducts","category","searchKeyword","sortOrder","dispatch","type","data","get","payload","error","message","listCategories","shopProducts","shopId","saveProduct","product","getState","console","log","userSignin","userInfo","_id","post","headers","Authorization","token","put","detailsProduct","productId","deleteProdcut","delete","success","deleteProductReview","reviewId","saveProductReview","review"],"mappings":"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","sourcesContent":["import {\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_SAVE_REQUEST,\r\n  PRODUCT_SAVE_SUCCESS,\r\n  PRODUCT_SAVE_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_REVIEW_SAVE_REQUEST,\r\n  PRODUCT_REVIEW_SAVE_FAIL,\r\n  PRODUCT_REVIEW_SAVE_SUCCESS,\r\n} from '../constants/productConstants';\r\nimport axios from 'axios';\r\nimport Axios from 'axios';\r\n\r\nconst listProducts = (\r\n  category = '',\r\n  searchKeyword = '',\r\n  sortOrder = ''\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      '/api/products?category=' +\r\n        category +\r\n        '&searchKeyword=' +\r\n        searchKeyword +\r\n        '&sortOrder=' +\r\n        sortOrder\r\n    );\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst listCategories = (\r\n  category = '',\r\n  searchKeyword = '',\r\n  sortOrder = ''\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      '/api/products/categories?category=' +\r\n        category +\r\n        '&searchKeyword=' +\r\n        searchKeyword +\r\n        '&sortOrder=' +\r\n        sortOrder\r\n    );\r\n    dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: CATEGORY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nconst shopProducts = (\r\n  shopId = '',\r\n  category = '',\r\n  searchKeyword = '',\r\n  sortOrder = ''\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      '/api/products?shopId=' +\r\n        shopId+'&category=' +\r\n        category +\r\n        '&searchKeyword=' +\r\n        searchKeyword +\r\n        '&sortOrder=' +\r\n        sortOrder\r\n    );\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst saveProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n      console.log(\"Product Saving...\")\r\n    dispatch({ type: PRODUCT_SAVE_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    if (!product._id) {\r\n      const { data } = await Axios.post('/api/products', product, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + userInfo.token,\r\n        },\r\n      });\r\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n    } else {\r\n      const { data } = await Axios.put(\r\n        '/api/products/' + product._id,\r\n        product,\r\n        {\r\n          headers: {\r\n            Authorization: 'Bearer ' + userInfo.token,\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst detailsProduct = (productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    const { data } = await axios.get('/api/products/' + productId);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst deleteProdcut = (productId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n    const { data } = await axios.delete('/api/products/' + productId, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + userInfo.token,\r\n      },\r\n    });\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data, success: true });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst deleteProductReview = (productId, reviewId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n    const { data } = await axios.delete('/api/products/' + productId+'/reviews/' + reviewId, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + userInfo.token,\r\n      },\r\n    });\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data, success: true });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst saveProductReview = (productId, review) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: {\r\n        userInfo: { token },\r\n      },\r\n    } = getState();\r\n    dispatch({ type: PRODUCT_REVIEW_SAVE_REQUEST, payload: review });\r\n    const { data } = await axios.post(\r\n      `/api/products/${productId}/reviews`,\r\n      review,\r\n      {\r\n        headers: {\r\n          Authorization: 'Bearer ' + token,\r\n        },\r\n      }\r\n    );\r\n    dispatch({ type: PRODUCT_REVIEW_SAVE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    // report error\r\n    dispatch({ type: PRODUCT_REVIEW_SAVE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport {\r\n  listProducts,\r\n  listCategories,\r\n  shopProducts,\r\n  detailsProduct,\r\n  saveProduct,\r\n  deleteProdcut,\r\n  saveProductReview,\r\n  deleteProductReview,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}