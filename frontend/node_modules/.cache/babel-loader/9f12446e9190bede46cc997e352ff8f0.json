{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\react-book-store\\\\frontend\\\\src\\\\screens\\\\UsersScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Sidebar from '../layout/Sidebar';\nimport InfoBox from './Infobox';\nimport { saveUser, listUsers, deleteUser } from '../actions/userActions';\n\nfunction UsersScreen(props) {\n  _s();\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isAdmin, setIsAdmin] = useState('');\n  const [isVerified, setIsVerified] = useState('');\n  const userList = useSelector(state => state.userList);\n  const {\n    users\n  } = userList;\n  const userSave = useSelector(state => state.userSave);\n  const {\n    loading: loadingSave,\n    success: successSave,\n    error: errorSave\n  } = userSave;\n  const userDelete = useSelector(state => state.userDelete);\n  const {\n    success: successDelete\n  } = userDelete;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successSave) {\n      setModalVisible(false);\n    }\n\n    dispatch(listUsers());\n    return () => {//\n    };\n  }, [successSave, successDelete, dispatch]);\n\n  const openModal = user => {\n    setModalVisible(true);\n    setId(user._id);\n    setName(user.name || \"\");\n    setEmail(user.email || \"\");\n    setPassword(user.password || \"\");\n    setIsAdmin(user.isAdmin || \"\");\n    setIsVerified(user.isVerified || \"\");\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveUser({\n      _id: id,\n      name,\n      email,\n      password,\n      isAdmin,\n      isVerified\n    }));\n  };\n\n  const deleteHandler = user => {\n    if (window.confirm(\"Are you sure to delete this data?\")) {\n      dispatch(deleteUser(user._id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"breadcrumb-item\",\n          href: process.env.PUBLIC_URL + \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"breadcrumb-item active\",\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"static about-sec\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: /*#__PURE__*/_jsxDEV(Sidebar, {\n              activeMenu: 'users'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-10\",\n            children: [modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form1\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: submitHandler,\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"form-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: [id ? 'Edit' : 'Create', \" User\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [loadingSave && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 45\n                    }, this), errorSave && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: errorSave\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 43\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"name\",\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"name\",\n                      value: name,\n                      id: \"name\",\n                      onChange: e => setName(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email\",\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"email\",\n                      value: email,\n                      id: \"email\",\n                      onChange: e => setEmail(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"password\",\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"password\",\n                      name: \"password\",\n                      value: password,\n                      id: \"password\",\n                      onChange: e => setPassword(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"isVerified\",\n                      children: \"Is Verified\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"isVerified\",\n                      id: \"isVerified\",\n                      onChange: e => setIsVerified(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"true\",\n                        selected: isVerified ? \"selected\" : \"\",\n                        children: \"Yes \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 138,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"false\",\n                        selected: !isVerified ? \"selected\" : \"\",\n                        children: \"No\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email\",\n                      children: \"Is Admin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"isAdmin\",\n                      id: \"isAdmin\",\n                      onChange: e => setIsAdmin(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"true\",\n                        selected: isAdmin ? \"selected\" : \"\",\n                        children: \"Yes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"false\",\n                        selected: !isAdmin ? \"selected\" : \"\",\n                        children: \"No\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"submit\",\n                        className: \"btn btn-primary btn-lg\",\n                        children: id ? 'Update' : 'Create'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 29\n                      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        onClick: () => setModalVisible(false),\n                        className: \"btn btn-secondary btn-lg\",\n                        children: \"Back\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 159,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"product-list\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-striped\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      align: \"right\",\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: user._id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: user.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: user.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-info btn-sm\",\n                        onClick: () => openModal(user),\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 29\n                      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-danger btn-sm\",\n                        onClick: () => deleteHandler(user),\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 27\n                    }, this)]\n                  }, user._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-infobox\",\n        children: /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Total No of Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UsersScreen, \"jD7lwB7OMdggpu+LOrt3DNrdUg0=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = UsersScreen;\nexport default UsersScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersScreen\");","map":{"version":3,"sources":["F:/react-book-store/frontend/src/screens/UsersScreen.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Sidebar","InfoBox","saveUser","listUsers","deleteUser","UsersScreen","props","modalVisible","setModalVisible","id","setId","name","setName","email","setEmail","password","setPassword","isAdmin","setIsAdmin","isVerified","setIsVerified","userList","state","users","userSave","loading","loadingSave","success","successSave","error","errorSave","userDelete","successDelete","dispatch","openModal","user","_id","submitHandler","e","preventDefault","deleteHandler","window","confirm","process","env","PUBLIC_URL","target","value","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Sidebar from '../layout/Sidebar'; \r\nimport InfoBox from './Infobox';\r\nimport {\r\n  saveUser,\r\n  listUsers,\r\n  deleteUser,\r\n} from '../actions/userActions';\r\n\r\nfunction UsersScreen(props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState('');\r\n  const [isVerified, setIsVerified] = useState('');\r\n  \r\n  const userList = useSelector((state) => state.userList);\r\n  const { users } = userList;\r\n\r\n  const userSave = useSelector((state) => state.userSave);\r\n  const {\r\n    loading: loadingSave,\r\n    success: successSave,\r\n    error: errorSave,\r\n  } = userSave;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const {\r\n    success: successDelete\r\n  } = userDelete;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (successSave) {\r\n      setModalVisible(false);\r\n    }\r\n    dispatch(listUsers());\r\n    return () => {\r\n      //\r\n    };\r\n  }, [successSave, successDelete, dispatch]);\r\n\r\n  const openModal = (user) => {\r\n    setModalVisible(true);\r\n    setId(user._id);\r\n    setName(user.name || \"\");\r\n    setEmail(user.email || \"\");\r\n    setPassword(user.password || \"\");\r\n    setIsAdmin(user.isAdmin || \"\");\r\n    setIsVerified(user.isVerified || \"\");\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      saveUser({\r\n        _id: id,\r\n        name,\r\n        email,\r\n        password,\r\n        isAdmin,\r\n        isVerified,\r\n      })\r\n    );\r\n  };\r\n  const deleteHandler = (user) => {\r\n      if (window.confirm(\"Are you sure to delete this data?\")) {\r\n        dispatch(deleteUser(user._id));\r\n      }\r\n  };\r\n  \r\n  return (\r\n        <>\r\n            <div className=\"breadcrumb\">\r\n                <div className=\"container\">\r\n                    <a className=\"breadcrumb-item\" href={process.env.PUBLIC_URL+\"/\"}>Home</a>\r\n                    <span className=\"breadcrumb-item active\">Users</span>\r\n                </div>\r\n            </div>\r\n            <section className=\"static about-sec\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <Sidebar activeMenu={'users'} />\r\n                        </div>\r\n                        <div className=\"col-10\">\r\n                {modalVisible && (\r\n                    <div className=\"form1\">\r\n                      <form onSubmit={submitHandler}>\r\n                        <ul className=\"form-container\">\r\n                          <li>\r\n                            <h2>{id ? 'Edit' : 'Create'} User</h2>\r\n                          </li>\r\n                          <li>\r\n                            {loadingSave && <div>Loading...</div>}\r\n                            {errorSave && <div>{errorSave}</div>}\r\n                          </li>\r\n\r\n                          <li>\r\n                            <label htmlFor=\"name\">Name</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              value={name}\r\n                              id=\"name\"\r\n                              onChange={(e) => setName(e.target.value)}\r\n                            ></input>\r\n                          </li>\r\n                          <li>\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"email\"\r\n                              value={email}\r\n                              id=\"email\"\r\n                              onChange={(e) => setEmail(e.target.value)}\r\n                            ></input>\r\n                          </li>\r\n                          <li>\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                              type=\"password\"\r\n                              name=\"password\"\r\n                              value={password}\r\n                              id=\"password\"\r\n                              onChange={(e) => setPassword(e.target.value)}\r\n                            ></input>\r\n                          </li>\r\n                          <li>\r\n                            <label htmlFor=\"isVerified\">Is Verified</label>\r\n                            <select \r\n                              name=\"isVerified\"\r\n                              id=\"isVerified\"\r\n                              onChange={(e) => setIsVerified(e.target.value)}\r\n                            >\r\n                                <option value=\"true\" selected={(isVerified) ? \"selected\" :\"\"}>Yes </option>\r\n                                <option value=\"false\" selected={(!isVerified) ? \"selected\" :\"\"}>No</option>\r\n                            </select>\r\n                          </li>\r\n                          <li>\r\n                            <label htmlFor=\"email\">Is Admin</label>\r\n                            <select \r\n                              name=\"isAdmin\"\r\n                              id=\"isAdmin\"\r\n                              onChange={(e) => setIsAdmin(e.target.value)}\r\n                            >\r\n                                <option value=\"true\" selected={(isAdmin) ? \"selected\" :\"\"}>Yes</option>\r\n                                <option value=\"false\" selected={(!isAdmin) ? \"selected\" :\"\"}>No</option>\r\n                            </select>\r\n                          </li>\r\n                          <li>\r\n                            <div>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-lg\">\r\n                              {id ? 'Update' : 'Create'}\r\n                            </button>\r\n                            &nbsp;\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => setModalVisible(false)}\r\n                              className=\"btn btn-secondary btn-lg\"\r\n                            >\r\n                              Back\r\n                            </button>\r\n                    </div>\r\n                          </li>\r\n                        </ul>\r\n                      </form>\r\n                    </div>\r\n                )}\r\n                \r\n                <div className=\"product-list\">\r\n                  <table className=\"table table-striped\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th align=\"right\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {users.map((user) => (\r\n                        <tr key={user._id}>\r\n                          <td>{user._id}</td>\r\n                          <td>{user.name}</td>\r\n                          <td>{user.email}</td>\r\n                          <td>\r\n                            <button className=\"btn btn-info btn-sm\" onClick={() => openModal(user)}>\r\n                              Edit\r\n                            </button>{' '}\r\n                            <button\r\n                              className=\"btn btn-danger btn-sm\"\r\n                              onClick={() => deleteHandler(user)}\r\n                            >\r\n                              Delete\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                  </div>\r\n          </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"app-infobox\">\r\n                        <InfoBox title=\"Total No of Users\"/>\r\n            </div>\r\n        </section>\r\n    </>\r\n  );\r\n}\r\nexport default UsersScreen;\r\n"]},"metadata":{},"sourceType":"module"}